#include <iostream>
#include <vector>

int знайти_номер_максимального (const std::vector<int>& масив);

int знайти_номер_максимального(const std::vector<int> &масив) {
    int номер_максимального = 0;
    for (int індекс = 1; індекс < масив.size(); індекс++) {
        if (масив[індекс] > масив[номер_максимального]) {
            номер_максимального = індекс;
        }
    }
    return номер_максимального;
}

int добуток_між_нулями(const std::vector<int>& масив) {
    int перший_нуль = -1;
    int другий_нуль = -1;

    for (int індекс = 0; індекс < масив.size(); індекс++) {
        if (масив[індекс] == 0) {
            if (перший_нуль == -1) {
                перший_нуль = індекс;
            } else {
                другий_нуль = індекс;
                break;
            }
        }
    }

    int добуток = 1;
    if (перший_нуль != -1 && другий_нуль != -1) {
        for (int індекс = перший_нуль + 1; індекс < другий_нуль; індекс++) {
            добуток *= масив[індекс];
        }
    } else {
        std::cout << "Не знайдено два нульових елементи для обчислення добутку" << std::endl;
    }

    return добуток;
}

void перетворити_масив(std::vector<int>& масив) {
    std::vector<int> тимчасовий = масив;

    int половина_розміру = масив.size() / 2;
    for (int індекс = 0; індекс < половина_розміру; індекс++) {
        масив[2 * індекс] = тимчасовий[індекс * 2 + 1];
        масив[2 * індекс + 1] = тимчасовий[індекс * 2];
    }
}

int main() {
    std::vector<int> мій_масив = {3, 1, 4, 0, 7, 2, 0, 5}; // Зразок масиву, який можна змінити

    int номер_максимального = знайти_номер_максимального(мій_масив);
    std::cout << "Номер максимального елемента: " << номер_максимального << std::endl;

    int добуток = добуток_між_нулями(мій_масив);
    std::cout << "Добуток елементів між нулями: " << добуток << std::endl;

    перетворити_масив(мій_масив);

    std::cout << "Результат перетворення масиву:" << std::endl;
    for (int елемент : мій_масив) {
        std::cout << елемент << " ";
    }
    std::cout << std::endl;

    return 0;
}
